<?xml version="1.0"?>
<launch>
  <arg name="ns" default="/"/>
  <arg name="model" default="turtlebot"/>

  <arg name="base" default="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- kobuki, create, roomba -->
  <arg name="battery" default="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/> <!-- /proc/acpi/battery/BAT0 -->
  <arg name="stacks" default="$(optenv TURTLEBOT_STACKS hexagons)"/> <!-- hexagons, circles -->
  <arg name="3d_sensor" default="$(optenv TURTLEBOT_3D_SENSOR kinect)"/> <!-- kinect, asus_xtion_pro -->

  <arg name="urdf_file" default="$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro"/>

  <arg name="x" default="0"/>
  <arg name="y" default="2"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0"/>

  <param name="robot_description" command="$(find xacro)/xacro.py '$(arg urdf_file)'"/>

  <!-- Gazebo Model Spawner -->
  <node name="spawn_model_$(arg model)" pkg="gazebo_ros" type="spawn_model" args="-x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -unpause -urdf -param robot_description -namespace $(arg ns) -model $(arg model)"/>

  <!-- World Publisher -->
  <node name="turtlebot_gazebo_world" pkg="turtle_rv" type="turtle_rv_gazebo" required="true">
    <!-- See about tf_prefix stuff -->
  </node>

  <!-- State and Transformation Publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" required="true">
    <!-- See about tf_prefix stuff -->
  </node>

  <!-- Laser Scanner -->
  <node name="laserscan_nodelet_manager" pkg="nodelet" type="nodelet" args="manager" ns="$(arg ns)" required="true"/>
  <node name="depthimage_to_laserscan" pkg="nodelet" type="nodelet" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager" ns="$(arg ns)" required="true">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
    <remap from="scan" to="scan"/>
  </node>
</launch>
